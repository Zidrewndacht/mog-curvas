html, body {
    padding: 0;
    margin: 0;
    font-family: system-ui, sans-serif;
    height: 100vh;
    color: #555;
    font-size: 10.5pt;
}

#curves-canvas {
    width: 100%;
    margin: 0;
    padding: 0;
    overflow: hidden;
    /* Prevent scrollbars */
    display: block;
    /* Remove inline spacing */
    background-color: #f4f4f4;
    /* Optional: Visual feedback */
}

p, h1 {
    margin: 10px 20px;
}

#ui-controls-wrapper {
    position: fixed;
    margin: 0 0 0 80px;
}

#ui-controls {
    /*! padding: 20px; */
    margin: 10px auto;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
    width: 720px;

    text-shadow: 0 2px 5px white;
    box-shadow: 02px 10px 20px -9px #a0b2b6;
    backdrop-filter: blur(10px);
    background: linear-gradient(#fefefea0 10%, #f2f4f5b0 100%);
    border: 1px solid grey;
    border-radius: 16px;
    z-index: 10;
    
}

#ui-controls h1, #ui-controls p {
    grid-column: 1/3;
    font-size: 11pt;
}

.control-group {
    /*grupos de elementos de configuração*/
    margin: 20px 0 0 0;
    padding: 10px;
}

#NURBS-settings {
    grid-column: 1/3;
    align-self: center;
    justify-self: center;
    /*! transform: translateX(50px); */
}

#general-settings {
    display: flex;
    /* grid-template-columns: min-content 1fr 1fr 1fr 1fr min-content;
    grid-template-rows: 1fr 1fr 1fr 1fr; */
}

#showControlPolygon, #showWeights {
    grid-column: 1/2;
}

#sampleCount {
    grid-column: 4/5;
    grid-row: 2/3;
    align-self: center;
}

.setting-lbl {
    grid-column: 3/4;
    grid-row: 2/3;
    align-self: center;
    justify-self: right;
    padding: 10px;
}

.checkbox-lbl {
    align-self: center;
    justify-self: left;
}

input[type="text"] {
    padding: 8px 90px 8px 8px;
    border: 1px solid #ccc;
    border-radius: 8px;
    width: 360px;
    transform: translateX;
}

input[type="number"] {
    padding: 6px;
    border: 1px solid #ccc;
    border-radius: 8px;
    width: 50px;
    text-align: right;
    grid-column: 3/4;
}

input[type="checkbox"] {
    width: 24px;
    height: 24px;
    margin: 6px;
    align-self: center;
    justify-self: right;
}

#applyKnots, #resetKnots {
    padding: 8px;
    border: 1px solid #888;
    border-radius: 0 8px 8px 0;
    position: relative;
    left: -84px;
    width: 80px;
    transition: 0.25s all ease-in-out;
}   /*implementar hover, active do botão*/
#applyKnots{
    background: linear-gradient(0deg, hsl(110, 30%, 83%) 0%, hsl(110, 35%, 92%) 100%)
}
button:hover {
    transition: 0.5s all ease-in-out;
    filter:saturate(200%) contrast(110% );
}

button:active {
    filter:brightness(80%) contrast(120%);
    box-shadow: inset 1px 4px 16px 0 #0006;
    transition: 0.2s all ease-in-out;
}

.menu-item:hover {
    background: #f0f0f0;
}

#deletePoint{
    text-align: center;
}
#deletePoint:hover{
    background: rgb(162, 88, 88);
    color: #eee;
    text-shadow: 0px 1px 6px rgb(115, 63, 63);
}
footer{
    position: fixed;
    width: 100%;
    bottom: 0;
    left:0;
    grid-row: 8 / 9;
    grid-column: 2 / 6;
    padding: 0px;
    text-align: center;
    text-shadow: 0 2px 5px white;
    background-color: transparent;
}

.context-menu {
    position: fixed;
    text-shadow: 0px 1px 6px white;
    
    box-shadow: 2px 10px 20px -9px #a0b2b6;
    backdrop-filter: blur(6px);
    background: linear-gradient(#fefefea0 10%, #f2f4f5b0 100%);
    border: 1px solid grey;
    border-radius: 8px;

    padding: 5px 0;
    z-index: 1000;
    opacity: 0;
    transform: scale(0.95) translateY(-5px);
    transform-origin: top left;
    transition: 
        opacity 0.2s ease-in-out,
        transform 0.2s ease-in-out,
        visibility 0s linear 0.2s;
    visibility: hidden;
    
    pointer-events: auto; /* Ensure menu can receive clicks */
}

.context-menu.visible {
    opacity: 1;
    transform: scale(1) translateY(0);
    transition: 
        opacity 0.2s ease-in-out,
        transform 0.2s ease-in-out;
    visibility: visible;
}

.menu-item {
    padding: 4px;
    cursor: default;
    display: flex;
    align-items: center;
    justify-content: space-between;
    transition: background-color 0.2s ease-in-out;
    height: 28px;
}
.menu-item:hover {
    background: #ddd6;
}
.menu-number-input {
    width: 50px;
    margin-left: 0px;
    padding: 4px;
    border: 1px solid #ccc;
    border-radius: 6px;
    transition: border-color 0.2s ease-in-out;
    pointer-events: auto; /* Ensure input can receive clicks */
}

.menu-number-input:focus {
    border-color: #203080;
    outline: none;
}

#setXYZ{
    padding: 4px;
    margin: 0 4px 4px 4px;
    background: #aaa2;
    border-radius: 8px;
}
#setWeight, #deletePoint{
    height: 36px;
}
#setWeight span, 
#weightInput, #deletePoint span {
    margin: 8px;
}
/* Esconde opção de excluir caso não haja pontos suficientes. */
.context-menu .hidden-option {
  display: none;
}

#pointInfoPopup {
  min-width: 200px;
  pointer-events: none; /* Prevent popup from blocking mouse events */
}

#pointInfoPopup .menu-item {
    font-size: 10.5pt;
    cursor: default;
    justify-content: space-between;
    padding: 0px 10px;
}

#pointInfoPopup .menu-item:hover {
  background: transparent;
}

/* Minimize Button Styles */
.minimize-button {
    position: fixed;
    left: 8px;
    top: 8px;
    z-index: 100;
    background: transparent;
    border: none;
    border-radius: 50%;
    width: 48px;
    height: 48px;
    cursor: pointer;
    transition: all 0.2s ease-in-out;
    font-size: 24pt;
    font-weight: bold;
    /* color: white;
    text-shadow: 0px 2px 4px #ccc, 2px 0px 4px #ccc, -2px 0px 4px #ccc, 0px -2px 4px #ccc,
        0px 1px 0px black, 1px 0px 1px black, -1px 0px 1px black, 0px -1px 1px black; */
    color:#888;
    text-shadow: 0px 2px 4px white, 2px 0px 4px white, -2px 0px 4px white, 0px -2px 4px white;
    backdrop-filter: blur(1px);
}

.minimize-button:hover {
    background: #f0f0f0;
}

/* UI Wrapper Transitions */
#ui-controls-wrapper {
    position: fixed;
    margin: 0 0 0 64px;
    z-index: 10;
    opacity: 1;
    transform: scale(1) translateY(0);
    visibility: visible;
    transition: 
        opacity 0.2s ease-in-out,
        transform 0.2s ease-in-out,
        visibility 0s linear;
}

#ui-controls-wrapper.minimized {
    opacity: 0;
    transform: scale(0.92) translateX(-30px) translateY(-15px);
    visibility: hidden;
    transition: 
        opacity 0.2s ease-in-out,
        transform 0.2s ease-in-out,
        visibility 0s linear 0.2s;
}

